// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/framework/formats/matrix_data.proto

package com.google.mediapipe.formats.proto;

public final class MatrixDataProto {
    private MatrixDataProto() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }
    public interface MatrixDataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:mediapipe.MatrixData)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>optional int32 rows = 1;</code>
         * @return Whether the rows field is set.
         */
        boolean hasRows();
        /**
         * <code>optional int32 rows = 1;</code>
         * @return The rows.
         */
        int getRows();

        /**
         * <code>optional int32 cols = 2;</code>
         * @return Whether the cols field is set.
         */
        boolean hasCols();
        /**
         * <code>optional int32 cols = 2;</code>
         * @return The cols.
         */
        int getCols();

        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @return A list containing the packedData.
         */
        java.util.List<java.lang.Float> getPackedDataList();
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @return The count of packedData.
         */
        int getPackedDataCount();
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The packedData at the given index.
         */
        float getPackedData(int index);

        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         * @return Whether the layout field is set.
         */
        boolean hasLayout();
        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         * @return The layout.
         */
        com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout getLayout();
    }
    /**
     * <pre>
     * Proto for serializing Matrix data.
     * Data are stored in column-major order by default.
     * </pre>
     *
     * Protobuf type {@code mediapipe.MatrixData}
     */
    public  static final class MatrixData extends
            com.google.protobuf.GeneratedMessageLite<
                    MatrixData, MatrixData.Builder> implements
            // @@protoc_insertion_point(message_implements:mediapipe.MatrixData)
            MatrixDataOrBuilder {
        private MatrixData() {
            packedData_ = emptyFloatList();
        }
        /**
         * Protobuf enum {@code mediapipe.MatrixData.Layout}
         */
        public enum Layout
                implements com.google.protobuf.Internal.EnumLite {
            /**
             * <code>COLUMN_MAJOR = 0;</code>
             */
            COLUMN_MAJOR(0),
            /**
             * <code>ROW_MAJOR = 1;</code>
             */
            ROW_MAJOR(1),
            ;

            /**
             * <code>COLUMN_MAJOR = 0;</code>
             */
            public static final int COLUMN_MAJOR_VALUE = 0;
            /**
             * <code>ROW_MAJOR = 1;</code>
             */
            public static final int ROW_MAJOR_VALUE = 1;


            @java.lang.Override
            public final int getNumber() {
                return value;
            }

            /**
             * @param value The number of the enum to look for.
             * @return The enum associated with the given number.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Layout valueOf(int value) {
                return forNumber(value);
            }

            public static Layout forNumber(int value) {
                switch (value) {
                    case 0: return COLUMN_MAJOR;
                    case 1: return ROW_MAJOR;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Layout>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Layout> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Layout>() {
                        @java.lang.Override
                        public Layout findValueByNumber(int number) {
                            return Layout.forNumber(number);
                        }
                    };

            public static com.google.protobuf.Internal.EnumVerifier
            internalGetVerifier() {
                return LayoutVerifier.INSTANCE;
            }

            private static final class LayoutVerifier implements
                    com.google.protobuf.Internal.EnumVerifier {
                static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LayoutVerifier();
                @java.lang.Override
                public boolean isInRange(int number) {
                    return Layout.forNumber(number) != null;
                }
            };

            private final int value;

            private Layout(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:mediapipe.MatrixData.Layout)
        }

        private int bitField0_;
        public static final int ROWS_FIELD_NUMBER = 1;
        private int rows_;
        /**
         * <code>optional int32 rows = 1;</code>
         * @return Whether the rows field is set.
         */
        @java.lang.Override
        public boolean hasRows() {
            return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 rows = 1;</code>
         * @return The rows.
         */
        @java.lang.Override
        public int getRows() {
            return rows_;
        }
        /**
         * <code>optional int32 rows = 1;</code>
         * @param value The rows to set.
         */
        private void setRows(int value) {
            bitField0_ |= 0x00000001;
            rows_ = value;
        }
        /**
         * <code>optional int32 rows = 1;</code>
         */
        private void clearRows() {
            bitField0_ = (bitField0_ & ~0x00000001);
            rows_ = 0;
        }

        public static final int COLS_FIELD_NUMBER = 2;
        private int cols_;
        /**
         * <code>optional int32 cols = 2;</code>
         * @return Whether the cols field is set.
         */
        @java.lang.Override
        public boolean hasCols() {
            return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 cols = 2;</code>
         * @return The cols.
         */
        @java.lang.Override
        public int getCols() {
            return cols_;
        }
        /**
         * <code>optional int32 cols = 2;</code>
         * @param value The cols to set.
         */
        private void setCols(int value) {
            bitField0_ |= 0x00000002;
            cols_ = value;
        }
        /**
         * <code>optional int32 cols = 2;</code>
         */
        private void clearCols() {
            bitField0_ = (bitField0_ & ~0x00000002);
            cols_ = 0;
        }

        public static final int PACKED_DATA_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.FloatList packedData_;
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @return A list containing the packedData.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
        getPackedDataList() {
            return packedData_;
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @return The count of packedData.
         */
        @java.lang.Override
        public int getPackedDataCount() {
            return packedData_.size();
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The packedData at the given index.
         */
        @java.lang.Override
        public float getPackedData(int index) {
            return packedData_.getFloat(index);
        }
        private int packedDataMemoizedSerializedSize = -1;
        private void ensurePackedDataIsMutable() {
            if (!packedData_.isModifiable()) {
                packedData_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(packedData_);
            }
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The packedData to set.
         */
        private void setPackedData(
                int index, float value) {
            ensurePackedDataIsMutable();
            packedData_.setFloat(index, value);
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @param value The packedData to add.
         */
        private void addPackedData(float value) {
            ensurePackedDataIsMutable();
            packedData_.addFloat(value);
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         * @param values The packedData to add.
         */
        private void addAllPackedData(
                java.lang.Iterable<? extends java.lang.Float> values) {
            ensurePackedDataIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, packedData_);
        }
        /**
         * <code>repeated float packed_data = 3 [packed = true];</code>
         */
        private void clearPackedData() {
            packedData_ = emptyFloatList();
        }

        public static final int LAYOUT_FIELD_NUMBER = 4;
        private int layout_;
        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         * @return Whether the layout field is set.
         */
        @java.lang.Override
        public boolean hasLayout() {
            return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         * @return The layout.
         */
        @java.lang.Override
        public com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout getLayout() {
            com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout result = com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout.forNumber(layout_);
            return result == null ? com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout.COLUMN_MAJOR : result;
        }
        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         * @param value The layout to set.
         */
        private void setLayout(com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout value) {
            layout_ = value.getNumber();
            bitField0_ |= 0x00000004;
        }
        /**
         * <pre>
         * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
         * the default for mediapipe::Matrix and Eigen::Matrix*.
         * </pre>
         *
         * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
         */
        private void clearLayout() {
            bitField0_ = (bitField0_ & ~0x00000004);
            layout_ = 0;
        }

        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return (Builder) DEFAULT_INSTANCE.createBuilder();
        }
        public static Builder newBuilder(com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData prototype) {
            return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
        }

        /**
         * <pre>
         * Proto for serializing Matrix data.
         * Data are stored in column-major order by default.
         * </pre>
         *
         * Protobuf type {@code mediapipe.MatrixData}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData, Builder> implements
                // @@protoc_insertion_point(builder_implements:mediapipe.MatrixData)
                com.google.mediapipe.formats.proto.MatrixDataProto.MatrixDataOrBuilder {
            // Construct using com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>optional int32 rows = 1;</code>
             * @return Whether the rows field is set.
             */
            @java.lang.Override
            public boolean hasRows() {
                return instance.hasRows();
            }
            /**
             * <code>optional int32 rows = 1;</code>
             * @return The rows.
             */
            @java.lang.Override
            public int getRows() {
                return instance.getRows();
            }
            /**
             * <code>optional int32 rows = 1;</code>
             * @param value The rows to set.
             * @return This builder for chaining.
             */
            public Builder setRows(int value) {
                copyOnWrite();
                instance.setRows(value);
                return this;
            }
            /**
             * <code>optional int32 rows = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearRows() {
                copyOnWrite();
                instance.clearRows();
                return this;
            }

            /**
             * <code>optional int32 cols = 2;</code>
             * @return Whether the cols field is set.
             */
            @java.lang.Override
            public boolean hasCols() {
                return instance.hasCols();
            }
            /**
             * <code>optional int32 cols = 2;</code>
             * @return The cols.
             */
            @java.lang.Override
            public int getCols() {
                return instance.getCols();
            }
            /**
             * <code>optional int32 cols = 2;</code>
             * @param value The cols to set.
             * @return This builder for chaining.
             */
            public Builder setCols(int value) {
                copyOnWrite();
                instance.setCols(value);
                return this;
            }
            /**
             * <code>optional int32 cols = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearCols() {
                copyOnWrite();
                instance.clearCols();
                return this;
            }

            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @return A list containing the packedData.
             */
            @java.lang.Override
            public java.util.List<java.lang.Float>
            getPackedDataList() {
                return java.util.Collections.unmodifiableList(
                        instance.getPackedDataList());
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @return The count of packedData.
             */
            @java.lang.Override
            public int getPackedDataCount() {
                return instance.getPackedDataCount();
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @param index The index of the element to return.
             * @return The packedData at the given index.
             */
            @java.lang.Override
            public float getPackedData(int index) {
                return instance.getPackedData(index);
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @param value The packedData to set.
             * @return This builder for chaining.
             */
            public Builder setPackedData(
                    int index, float value) {
                copyOnWrite();
                instance.setPackedData(index, value);
                return this;
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @param value The packedData to add.
             * @return This builder for chaining.
             */
            public Builder addPackedData(float value) {
                copyOnWrite();
                instance.addPackedData(value);
                return this;
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @param values The packedData to add.
             * @return This builder for chaining.
             */
            public Builder addAllPackedData(
                    java.lang.Iterable<? extends java.lang.Float> values) {
                copyOnWrite();
                instance.addAllPackedData(values);
                return this;
            }
            /**
             * <code>repeated float packed_data = 3 [packed = true];</code>
             * @return This builder for chaining.
             */
            public Builder clearPackedData() {
                copyOnWrite();
                instance.clearPackedData();
                return this;
            }

            /**
             * <pre>
             * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
             * the default for mediapipe::Matrix and Eigen::Matrix*.
             * </pre>
             *
             * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
             * @return Whether the layout field is set.
             */
            @java.lang.Override
            public boolean hasLayout() {
                return instance.hasLayout();
            }
            /**
             * <pre>
             * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
             * the default for mediapipe::Matrix and Eigen::Matrix*.
             * </pre>
             *
             * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
             * @return The layout.
             */
            @java.lang.Override
            public com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout getLayout() {
                return instance.getLayout();
            }
            /**
             * <pre>
             * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
             * the default for mediapipe::Matrix and Eigen::Matrix*.
             * </pre>
             *
             * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
             * @param value The enum numeric value on the wire for layout to set.
             * @return This builder for chaining.
             */
            public Builder setLayout(com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout value) {
                copyOnWrite();
                instance.setLayout(value);
                return this;
            }
            /**
             * <pre>
             * Order in which the data are stored. Defaults to COLUMN_MAJOR, which matches
             * the default for mediapipe::Matrix and Eigen::Matrix*.
             * </pre>
             *
             * <code>optional .mediapipe.MatrixData.Layout layout = 4 [default = COLUMN_MAJOR];</code>
             * @return This builder for chaining.
             */
            public Builder clearLayout() {
                copyOnWrite();
                instance.clearLayout();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:mediapipe.MatrixData)
        }
        @java.lang.Override
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final java.lang.Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                java.lang.Object arg0, java.lang.Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData();
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case BUILD_MESSAGE_INFO: {
                    java.lang.Object[] objects = new java.lang.Object[] {
                            "bitField0_",
                            "rows_",
                            "cols_",
                            "packedData_",
                            "layout_",
                            com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.Layout.internalGetVerifier(),
                    };
                    java.lang.String info =
                            "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0001\u0000\u0001\u0004\u0000\u0002" +
                                    "\u0004\u0001\u0003$\u0004\f\u0002";
                    return newMessageInfo(DEFAULT_INSTANCE, info, objects);
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    com.google.protobuf.Parser<com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData> parser = PARSER;
                    if (parser == null) {
                        synchronized (com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData.class) {
                            parser = PARSER;
                            if (parser == null) {
                                parser =
                                        new DefaultInstanceBasedParser<com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData>(
                                                DEFAULT_INSTANCE);
                                PARSER = parser;
                            }
                        }
                    }
                    return parser;
                }
                case GET_MEMOIZED_IS_INITIALIZED: {
                    return (byte) 1;
                }
                case SET_MEMOIZED_IS_INITIALIZED: {
                    return null;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:mediapipe.MatrixData)
        private static final com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData DEFAULT_INSTANCE;
        static {
            MatrixData defaultInstance = new MatrixData();
            // New instances are implicitly immutable so no need to make
            // immutable.
            DEFAULT_INSTANCE = defaultInstance;
            com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
                    MatrixData.class, defaultInstance);
        }

        public static com.google.mediapipe.formats.proto.MatrixDataProto.MatrixData getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<MatrixData> PARSER;

        public static com.google.protobuf.Parser<MatrixData> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
